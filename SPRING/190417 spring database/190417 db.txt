1. DB연결
  ***********ojdbc6 다운
  -https://mvnrepository.com/   에 접속 검색하여 다운(usages가 제일 높은거)
  -맞는 버전 들어가서
  - maven 안에 있는 내용 복사한 후 아래 내용을 pom.xml 안에 붙여넣기(붙여넣기 위치는 test위)
		<dependency>
		    <groupId>com.oracle</groupId>
		    <artifactId>ojdbc6</artifactId>
		    <version>11.2.0.4.0-atlassian-hosted</version>
		    <scope>test</scope>
		</dependency>

  - 이대로만 작성하고 저장하면 dependency 에러가 남
  - 에러를 해결하기 위해 다시 홈페이지로 가서 보면 Maven 아래에 note를 보면
  - Note: this artifact it located at Atlassian 3rdParty repository (https://packages.atlassian.com/maven-3rdparty/) 
  - Atlassian 3rdParty클릭 -> https://packages.atlassian.com/maven-3rdparty/   URL을 복사 
  ->pom.xml </properties>아래와같이 <repositories> 작성
    	<repositories>
		<repository>
			<id>oracle</id>
			<name>ORACLE JDBC Repository</name>
			<url>https://packages.atlassian.com/maven-3rdparty/</url>
		</repository>
	</repositories>


    **************Spring JDBC 검색 후 버전에 맞게(5.0.4) 들어간 후 dependency를 복사하여 pom.xml
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-jdbc</artifactId>
		    <version>5.0.4.RELEASE</version>
		</dependency>
    -버전을 맞게 해주려면 pom.xml 위쪽에 버전 관련된 properties를 복사하여 ${org.springframework-version} 기입
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-jdbc</artifactId>
		    <version>${org.springframework-version}</version>
		</dependency>

   ***********Commons DBCP usage가 제일 높은거로 검색 후 추가
		<!-- https://mvnrepository.com/artifact/commons-dbcp/commons-dbcp -->
		<dependency>
		    <groupId>commons-dbcp</groupId>
		    <artifactId>commons-dbcp</artifactId>
		    <version>1.4</version>
		</dependency>

  *************mybatis 검색 usage가 제일 높은거로 추가
<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->
<dependency>
    <groupId>org.mybatis</groupId>
    <artifactId>mybatis</artifactId>
    <version>3.4.6</version>
</dependency>

  ************mybatis spring 검색 후 추가
<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring -->
<dependency>
    <groupId>org.mybatis</groupId>
    <artifactId>mybatis-spring</artifactId>
    <version>1.3.2</version>
</dependency>


2. MemberDao 생성
 - @Repository("memberDao")   선언, 괄호 안에 이름을 지어 Service에서 사용할 수 있음

3. MemberService 인터페이스 생성
 -> MemberServiceImpl.java 생성 -> implements MemberService한 후 메소드 자동생성

4. mybatis-config.xml  를 복사하여 src/main/resources 안에 붙여넣기
   ->typeAlias type에 패키지명을 내 패키지에 알맞게 수정
   ->enviroments 삭제 (스프링에서 처리함)
   ->src/main/resources 아래 mappers폴더 생성 후 member-mapper.xml 파일 복사 붙여넣기
   ->src/main/webapp/web-inf/spring/root-context.xml을 src/main/resources로 옮김 기존 위치에 있던 root-context.xml은 삭제
   ->web.xml 실행-><param-value>classpath:root-context.xml</param-value> 로 수정
   ->root-context 실행 -> beans ->마우스오른쪽 New element Bean -> id: dataSrouce 
                                                             		     value: org.apache.commons.dbcp.BasicDataSource
    ->생성한 datasrouce 마우스 오른쪽 -> new propertie element로 추가
      source에서는 아래와 같이 작성되어야 함
	<!-- DataSrouce 등록 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	<property name="driverClassName"
		value="oracle.jdbc.driver.OracleDriver"/>
	<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
	<property name="username" value="student" />
	<property name="password" value="student" />
	</bean>

    -> new element bean, new properties 로 아래와 같이 작업
            <bean class="org.mybatis.spring.SqlSessionFactoryBean"
		id="sqlSession">
		<property name="configLocation"
			value="classpath:mybatis-config.xml">
		</property>
		<property name="dataSource" ref="dataSource"></property>
	</bean>
  ->new element bean(class:org.mybatis.spring.SqlSessionTemplate)
   ->해당 bean 마우스 오른쪽 insert contructor -> ref에 sqlSession
	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSession"></constructor-arg>
	</bean>
 
  ->new element bean, id: transactionManager, class:org.springframework.jdbc.datasource.DataSourceTransactionManager
  ->new element
    -아래와같이 작성되야 함
	<!-- 트랜잭션 관리 설정 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="dataSource"></property>
	</bean>

5.
  ->MemberServiceImpl.java 실행   ->상단에 @Service("memberService")   추가
6.
  ->MemberController.java 실행
     //MemberService DI 선언
     @Autowired
      private MemberService memberService;
   
    ->loginMethod 수정
    Member loginMember = memberService.selectLogin(member);
    session.setAttribute("loginMember", loginMember);

7.
   ->MemberServiceImpl.java실행
	//마이바티스 연동 객체 선언
	@Autowired
	private SqlSessionTemplate mybatisSession;
	@Autowired
	private MemberDao memberDao;
   ->각 메소드 수정
    	@Override
	public Member selectLogin(Member member) {
		return memberDao.selectLogin(mybatisSession, member);
	}
  ->DAO에 selectLogin 메소드 생성

8.
  ->member-mapper 실행 ->resultMap 안에 perperty 들을 VO와 같게 수정
  ->대문자를 소문자로 바꿔주고 enrolldate는 enroll_date로 #{}안에 있는 것도 포함하여 전부 변환 userid/userpwd/enroll_date/lastmodified

9. oracleDriver 에러 발생 -> 선생님 pom.xml 복붙!!!!
