1. MemberController.java
   loginMethod에 SessionStatus status 매개변수 추가 
   로그인 여부 if문 추가

2. views/common/error.jsp 추가
  -상단 jsp안에 isErrorPage="true"추가
  -상단에 taglib prefix로 jstl 사용할 수 있게 구문 추가
  -내용 작성

3. MemberController.java 에 logoutMethod 메소드 추가

4. views/member/enrollPage.jsp 추가
  - 기존에 작업하던 프로젝트에서 enroll.html을 가져옴
  -> enroll.html 을 enrollPage.jsp 로 이름 수정
  -> 다른 jsp에서 상단 jsp 선언문 복사 -> enrollPage.jsp 상단에 붙여넣기
  -> form action  "minsert.do" 로 바꿔줌

5. MemberController.java 에 moveEnrollPage() 메소드 작성

6. 회원가입 시 프로필 사진 업로드를 위한 depaendency가 pom.xml에 있는지 확인
  		<!-- FileUpload -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.3</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>

  -> MemberController.java에 insertMember 메소드 추가
7. 회원가입 시도 시 값 전달이 안됨
  - web.xml에 listner 밑에 아래와 같이 작성
	<!-- post 방식으로 전송 온 한글값 인코딩 처리 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>

8. servlet-context.xml 에 bean 추가 multipartResolver
   -> multipartResolver에 element 추가 maxuploadsize  // value : 10000000
   - 아래와 같이 추가 되면 됨
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	<beans:property name="maxUploadSize" value="10000000"></beans:property>
	</beans:bean>
  -> 회원가입하여 System.out.println에 잘 나오는지 확인

9. MemberController.java , service, dao 에 insertMember 작업

10. selectMember 작업
  - 매개변수 안에 name 불러올 때 주의,
  - memberDetail.jsp 안에 매개변수 수정 ->username,userid, enroll_date -> 상단에 errorPage="../common/error.jsp" 로 수정
  -> href 변경
  	function moveUpdatePage(){
		location.href = "mupview.do?userid=${member.userid}";
	}
	
	function memberDeleteCall(){
		location.href = "mdel.do?userid=${ member.userid }";
	}

11. deleteMember 작업
  -컨트롤러에서 deleteMember 매개변수로 Model model 로 선언(springframework 임포트)
  -ModelAndView을 줄인게 Model 임
  ->외래키 제약조건으로 안 지워질 경우가 있음
  ->DB에서 alter table users drop constraint FK_MEMBER_UID; 로 제약조건을 지워줌

12. memberUpdate 작업
  -memberUpdatePage.jsp 에서 상단에 errorPage="../common/error.jsp" 수정
  ->필드명 전부 소문자로 변경, ${}안에 loginMember를 member로 변경
  ->컨트롤러에서 memberViewUpdate, updateMember 메소드 작업