-- DAY5 SQL_Workshop03 과제

-- [Additional SELECT - Option]

--1. 학생이름과 주소지를 표시하시오. 단, 출력 헤더는 "학생 이름", "주소지"로 하고,
-- 정렬은 이름으로 오름차순 표시하도록 ?다.

SELECT STUDENT_NAME AS "학생 이름",
       STUDENT_ADDRESS AS "주소지"
FROM   TB_STUDENT
ORDER BY 1;

--2. 휴학중인 학생들의 이름과 주민번호를 나이가 적은 순서로 화면에 출력하시오.

SELECT STUDENT_NAME,
       STUDENT_SSN
FROM   TB_STUDENT
WHERE  ABSENCE_YN = 'Y'
ORDER BY 2 DESC;

--3. 주소지가 강원도나 경기도인 학생들 중 1900 년대 학번을 가진 학생들의 이름과 학번,
--주소를 이름의 오름차순으로 화면에 출력하시오. 단, 출력헤더에는 "학생이름","학번",
--"거주지 주소" 가 출력되도록 한다.

SELECT STUDENT_NAME AS "학생이름",
       STUDENT_NO AS "학번",
			 STUDENT_ADDRESS AS "거주지 주소" 
FROM   TB_STUDENT
WHERE  ( STUDENT_ADDRESS LIKE '%강원도%'
        OR STUDENT_ADDRESS LIKE '%경기도%' )
AND   TO_CHAR(ENTRANCE_DATE, 'RRRR') LIKE '19%' 
ORDER BY 1 ;

--4. 현재 법학과 교수 중 가장 나이가 많은 사람부터 이름을 확인? 수 있는 SQL 문장을
--작성하시오. (법학과의 '학과코드'는 학과 테이블(TB_DEPARTMENT)을 조회해서 찾아
--내도록 하자)
SELECT DEPARTMENT_NO 
FROM   TB_DEPARTMENT 
WHERE  DEPARTMENT_NAME = '법학과';

SELECT PROFESSOR_NAME,
       PROFESSOR_SSN
FROM   TB_PROFESSOR
WHERE  DEPARTMENT_NO = '005'
ORDER BY 2;

-- 조인사용시
SELECT PROFESSOR_NAME,
             PROFESSOR_SSN
FROM   TB_PROFESSOR
JOIN   TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE  DEPARTMENT_NAME = '법학과'
ORDER BY 2;

-- 서브쿼리 사용시
SELECT PROFESSOR_NAME,
       PROFESSOR_SSN
FROM   TB_PROFESSOR
WHERE  DEPARTMENT_NO = (SELECT DEPARTMENT_NO 
                            FROM   TB_DEPARTMENT 
                            WHERE  DEPARTMENT_NAME = '법학과')
ORDER BY 2;


--5. 2004 년 2 학기에 'C3118100' 과목을 수강? 학생들의 학점을 조회하려고 ?다. 학점이
--높은 학생부터 표시하고, 학점이 같으면 학번이 낮은 학생부터 표시하는 구문을
--작성해보시오.

SELECT STUDENT_NO,
       POINT
FROM   TB_GRADE
WHERE  TERM_NO = '200402'
AND    CLASS_NO = 'C3118100'
ORDER BY 2 DESC, 1;

--6. 학생 번호, 학생 이름, 학과 이름을 이름 가나다 순서로 정렬하여 출력하는 SQL 문을
--작성하시오.
SELECT STUDENT_NO,
       STUDENT_NAME,
			 DEPARTMENT_NO
FROM   TB_STUDENT
ORDER BY 2;

-- 7
SELECT STUDENT_NO,
       STUDENT_NAME,
			 DEPARTMENT_NAME
FROM   TB_STUDENT
JOIN   TB_DEPARTMENT USING (DEPARTMENT_NO)
ORDER BY 2;


--8.
SELECT CLASS_NAME,
 PROFESSOR_NAME
FROM TB_CLASS
JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
JOIN TB_PROFESSOR USING(PROFESSOR_NO)
;

--9.
SELECT A.CLASS_NAME,
 PROFESSOR_NAME
FROM TB_CLASS A
JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
JOIN TB_PROFESSOR USING(PROFESSOR_NO)
JOIN TB_DEPARTMENT B ON (A.DEPARTMENT_NO = B.DEPARTMENT_NO)
WHERE CATEGORY = '인문사회'
;

--10.
SELECT STUDENT_NO AS "학번",
 STUDENT_NAME AS "학생 이름",
ROUND(AVG(POINT), 1) AS "전체 평점"
FROM TB_DEPARTMENT
JOIN TB_STUDENT USING (DEPARTMENT_NO)
JOIN TB_GRADE USING (STUDENT_NO)
WHERE DEPARTMENT_NAME = '음악학과'
GROUP BY STUDENT_NO, STUDENT_NAME
ORDER BY 3 DESC;



--11.
SELECT DEPARTMENT_NAME AS "학과이름",
 STUDENT_NAME AS "학생이름",
PROFESSOR_NAME AS "지도교수이름"
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
JOIN TB_PROFESSOR ON (COACH_PROFESSOR_NO = PROFESSOR_NO)
WHERE STUDENT_NO = 'A313047';


--12.
SELECT STUDENT_NAME,
 TERM_NO
FROM TB_CLASS
JOIN TB_GRADE USING (CLASS_NO)
JOIN TB_STUDENT USING (STUDENT_NO)
WHERE TERM_NO LIKE '2007%'
AND CLASS_NAME = '인간관계론';


--13.
SELECT CLASS_NAME,
 DEPARTMENT_NAME 
FROM TB_CLASS
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
LEFT JOIN TB_CLASS_PROFESSOR USING (CLASS_NO )
WHERE CATEGORY = '예체능'
AND PROFESSOR_NO IS NULL
;


-- 14번
SELECT STUDENT_NAME AS "학생이름",
        NVL(PROFESSOR_NAME, '지도교수 미지정') AS "지도교수"
FROM TB_STUDENT A
LEFT JOIN TB_PROFESSOR ON (COACH_PROFESSOR_NO = PROFESSOR_NO)
LEFT JOIN TB_DEPARTMENT B ON(A.DEPARTMENT_NO = B.DEPARTMENT_NO)
WHERE B.DEPARTMENT_NAME = '서반아어학과'
ORDER BY STUDENT_NO ;


--15번
SELECT STUDENT_NO AS 학번,
        STUDENT_NAME AS 이름,
        DEPARTMENT_NAME AS "학과 이름",
        AVG(POINT) AS 평점
FROM TB_STUDENT
JOIN TB_GRADE USING (STUDENT_NO)
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE ABSENCE_YN <> 'Y'
GROUP BY STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
HAVING AVG(POINT) >= 4.0
ORDER BY 1;

--16번
SELECT  CLASS_NO, CLASS_NAME, TRUNC(AVG(POINT), 8)AS "AVG(POINT)"
FROM    TB_DEPARTMENT
JOIN    TB_CLASS USING (DEPARTMENT_NO)
JOIN    TB_GRADE USING (CLASS_NO)
WHERE   DEPARTMENT_NAME = '환경조경학과'
AND     CLASS_TYPE LIKE '%전공%'
GROUP BY CLASS_NO, CLASS_NAME
ORDER BY 1;


--17번
SELECT STUDENT_NAME, STUDENT_ADDRESS
FROM   TB_STUDENT
WHERE  DEPARTMENT_NO IN (SELECT DEPARTMENT_NO
                            FROM   TB_STUDENT
                            WHERE  STUDENT_NAME = '최경희')
;											


--18번
SELECT  STUDENT_NO, STUDENT_NAME
FROM (SELECT STUDENT_NAME, 	STUDENT_NO, AVG(POINT),
              RANK () OVER (ORDER BY AVG(POINT) DESC) AS RANK
       FROM   TB_DEPARTMENT
       JOIN   TB_CLASS USING (DEPARTMENT_NO)
       JOIN   TB_GRADE USING (CLASS_NO)
       JOIN   TB_STUDENT USING (STUDENT_NO)
       WHERE  DEPARTMENT_NAME = '국어국문학과'
       GROUP BY STUDENT_NAME, STUDENT_NO)
WHERE RANK = '1';


--19번			
SELECT DEPARTMENT_NAME AS "계열 학과명",
			 ROUND(AVG(POINT), 1) AS "전공평점"
FROM   TB_DEPARTMENT 
JOIN   TB_CLASS C USING (DEPARTMENT_NO)
JOIN   TB_GRADE USING (CLASS_NO)
WHERE  CATEGORY IN (SELECT CATEGORY
                      FROM TB_DEPARTMENT
                      WHERE DEPARTMENT_NAME = '환경조경학과')
GROUP BY DEPARTMENT_NAME
ORDER BY 1;


