--1
SELECT (SELECT COUNT(*) FROM TB_BOOK)+ (SELECT COUNT(*) FROM TB_PUBLISHER) + 
        (SELECT COUNT(*) FROM TB_WRITER) + (SELECT COUNT(*) FROM TB_BOOK_AUTHOR) "총 데이터건 수"
FROM DUAL; 

--2
DESC USER_TABLES;

SELECT * FROM USER_CONSTRAINTS;

SELECT * FROM USER_CATALOG;

SELECT * FROM ALL_TABLES;

SELECT * FROM USER_OBJECTS;


SELECT TABLE_NAME,COLUMN_NAME, DATA_TYPE, NULLABLE, DATA_DEFAULT FROM ALL_TAB_COLUMNS;
SELECT CONSTRAINT_NAME, CONSTRAINT_TYPE, R_CONSTRAINT_NAME FROM USER_CONSTRAINTS;

DESC  USER_TAB_COLUMNS;

DESC USER_CONSTRAINTS;

--답
SELECT TABLE_NAME,COLUMN_NAME, DATA_TYPE, NULLABLE, DATA_DEFAULT,
    CONSTRAINT_NAME, CONSTRAINT_TYPE, R_CONSTRAINT_NAME
FROM USER_TAB_COLUMNS
--JOIN USER_CONSTRAINTS USING(TABLE_NAME);
NATURAL JOIN USER_CONSTRAINTS;

--3
SELECT BOOK_NO, BOOK_NM
FROM TB_BOOK
WHERE LENGTH(BOOK_NM) >= 25;

--4
SELECT WRITER_NM, OFFICE_TELNO, HOME_TELNO, MOBILE_NO
FROM(
SELECT WRITER_NM, OFFICE_TELNO, HOME_TELNO, MOBILE_NO
FROM TB_WRITER
WHERE MOBILE_NO LIKE '019%' AND WRITER_NM LIKE '김%'
ORDER BY 1
)
WHERE ROWNUM=1;

--5
SELECT COUNT(DISTINCT WRITER_NO) "작가(명)"
FROM TB_BOOK_AUTHOR
WHERE COMPOSE_TYPE = '옮김';

--중복 제거한 답
SELECT SUM(
CASE 
WHEN COUNT(*)>=2 THEN 1
ELSE 1
END
) "작가(명)"
FROM TB_BOOK_AUTHOR
WHERE COMPOSE_TYPE = '옮김'
GROUP BY WRITER_NO;

--정은이 답
SELECT COUNT(*)
FROM (SELECT DISTINCT WRITER_NO
      FROM TB_BOOK_AUTHOR
      WHERE COMPOSE_TYPE = '옮김') F,
      TB_WRITER W
WHERE F.WRITER_NO = W.WRITER_NO;

--6
SELECT COMPOSE_TYPE, COUNT(*)
FROM TB_BOOK_AUTHOR
JOIN TB_BOOK USING (BOOK_NO)
WHERE COMPOSE_TYPE IN (
SELECT COMPOSE_TYPE, COUNT(*)
FROM TB_BOOK_AUTHOR
JOIN TB_BOOK USING (BOOK_NO)
WHERE COMPOSE_TYPE IS NOT NULL
GROUP BY COMPOSE_TYPE
HAVING COUNT(*)>=300
)
GROUP BY COMPOSE_TYPE;

SELECT COMPOSE_TYPE, COUNT(*)
FROM TB_BOOK_AUTHOR
WHERE COMPOSE_TYPE IS NOT NULL
GROUP BY COMPOSE_TYPE
HAVING COUNT(*)>=300;

--7
SELECT BOOK_NM, ISSUE_DATE, PUBLISHER_NM
FROM(
SELECT BOOK_NM, ISSUE_DATE, PUBLISHER_NM
FROM TB_BOOK
ORDER BY 2 DESC
)
WHERE ROWNUM = 1;

--8
SELECT WRITER_NM "작가 이름", 권수 "권 수"
FROM(
SELECT WRITER_NM, COUNT(*) 권수
FROM TB_BOOK_AUTHOR
JOIN TB_WRITER USING (WRITER_NO)
GROUP BY WRITER_NM
ORDER BY 2 DESC
)
WHERE ROWNUM  <= 3;

--9
SELECT WRITER_NM FROM TB_WRITER
MINUS
SELECT WRITER_NM
FROM TB_BOOK_AUTHOR
JOIN TB_WRITER USING(WRITER_NO);

SELECT WRITER_NM, MIN(ISSUE_DATE)
FROM TB_BOOK_AUTHOR
JOIN TB_WRITER USING (WRITER_NO)
JOIN TB_BOOK USING (BOOK_NO)
GROUP BY WRITER_NM;

UPDATE TB_WRITER A
SET REGIST_DATE = (SELECT MIN(ISSUE_DATE)
FROM TB_BOOK_AUTHOR
JOIN TB_WRITER B USING (WRITER_NO)
JOIN TB_BOOK USING (BOOK_NO)
WHERE A.WRITER_NM = B.WRITER_NM
GROUP BY WRITER_NM);

--선용이
UPDATE TB_WRITER A
SET REGIST_DATE  = (SELECT MIN(ISSUE_DATE)
                    FROM TB_BOOK
                    JOIN TB_BOOK_AUTHOR B USING (BOOK_NO)
                    WHERE B.WRITER_NO = A.WRITER_NO
                    GROUP BY WRITER_NO);

SELECT *
FROM TB_WRITER;

SELECT WRITER_NO
FROM TB_BOOK
JOIN TB_BOOK_AUTHOR USING (BOOK_NO)
JOIN TB_WRITER B USING (WRITER_NO);

SELECT WRITER_NO,MIN(ISSUE_DATE)
FROM TB_BOOK
JOIN TB_BOOK_AUTHOR USING (BOOK_NO)
JOIN TB_WRITER USING (WRITER_NO)
GROUP BY WRITER_NO;

--10
CREATE TABLE TB_BOOK_TRANSLATOR(
    BOOK_NO VARCHAR2(10) ,
    WRITER_NO VARCHAR(10) ,
    TRANS_LANG VARCHAR2(60),
    CONSTRAINT PK_BOOK_TRANSALTOR PRIMARY KEY (BOOK_NO,WRITER_NO),
    CONSTRAINT FK_BOOK_TRANSLATOR_01 FOREIGN KEY(BOOK_NO) REFERENCES TB_BOOK,
    CONSTRAINT FK_BOOK_TRANSLATOR_02 FOREIGN KEY(WRITER_NO) REFERENCES TB_WRITER
);
ROLLBACK;
DROP TABLE TB_BOOK_TRANSLATOR;
DESC TB_BOOK_TRANSLATOR;

--11  
INSERT INTO TB_BOOK_TRANSLATOR(BOOK_NO, WRITER_NO)
(SELECT BOOK_NO,WRITER_NO
 FROM TB_BOOK_AUTHOR
 WHERE COMPOSE_TYPE IN('옮김', '역주', '편역', '공역') );--169개의 행
 
SELECT * FROM TB_BOOK_TRANSLATOR;

DELETE  FROM TB_BOOK_AUTHOR
WHERE COMPOSE_TYPE IN ('옮김', '역주', '편역', '공역'); --169행 삭제


--12
SELECT BOOK_NM, WRITER_NM
FROM TB_BOOK_TRANSLATOR
LEFT JOIN TB_WRITER USING (WRITER_NO)
LEFT JOIN TB_BOOK USING (BOOK_NO)
WHERE ISSUE_DATE LIKE '07%'; --5행

--13
CREATE VIEW VW_BOOK_TRANSLATOR
AS
SELECT BOOK_NM 도서명, WRITER_NM 번역자, ISSUE_DATE 출판일
FROM TB_BOOK_TRANSLATOR
LEFT JOIN TB_WRITER USING (WRITER_NO)
LEFT JOIN TB_BOOK USING (BOOK_NO)
WHERE ISSUE_DATE LIKE '07%'
WITH READ ONLY;

SELECT * FROM VW_BOOK_TRANSLATOR;

--14
INSERT INTO TB_PUBLISHER
VALUES ('춘 출판사', '02-6710-3737', DEFAULT);
COMMIT;
SELECT * FROM TB_PUBLISHER;

--15
SELECT WRITER_NM,COUNT(*)
FROM TB_WRITER
GROUP BY WRITER_NM
HAVING COUNT(*) >1;

--16
SELECT COMPOSE_TYPE
FROM TB_BOOK_AUTHOR
WHERE COMPOSE_TYPE IS NULL;--389행

UPDATE TB_BOOK_AUTHOR
SET COMPOSE_TYPE = '지음'
WHERE COMPOSE_TYPE IS NULL;

COMMIT;

--17
--서울지역 작가 모임을 개최하려고 한다. 사무실이 서울이고, 사무실 전화 번호 국번이 3자리인 작가의
--이름과 사무실 전화 번호를 표시하는 SQL 구문을 작성하시오.

SELECT WRITER_NM, OFFICE_TELNO
FROM TB_WRITER
WHERE SUBSTR(OFFICE_TELNO,1,2)='02' 
AND OFFICE_TELNO LIKE '%-___-%';--사무실이 서울인데 사무실 전화번호 국번이 3자리는 뭔말?

--18 --9번해야 풀 수 있음
SELECT WRITER_NM
FROM TB_WRITER
WHERE MONTHS_BETWEEN(TO_DATE('06/01/01','YY/MM/DD'), REGIST_DATE) / 12 >= 31
ORDER BY WRITER_NM;

--19. 요즘 들어 다시금 인기를 얻고 있는 '황금가지' 출판사를 위한 기획전을 열려고 한다. '황금가지'
--출판사에서 발행한 도서 중 재고 수량이 10권 미만인 도서명과 가격, 재고상태를 표시하는 SQL 구문을
--작성하시오. 재고 수량이 5권 미만인 도서는 ‘추가주문필요’로, 나머지는 ‘소량보유’로 표시하고,
--재고수량이 많은 순, 도서명 순으로 표시되도록 한다.
SELECT BOOK_NM, PRICE,
CASE
WHEN STOCK_QTY <5 THEN '추가주문필요'
ELSE '소량보유'
END
FROM TB_BOOK
JOIN TB_PUBLISHER USING (PUBLISHER_NM)
WHERE PUBLISHER_NM = '황금가지' AND STOCK_QTY <10
ORDER BY STOCK_QTY DESC,1;

--20
--'아타트롤' 도서 작가와 역자를 표시하는 SQL 구문을 작성하시오. (결과 헤더는
--‘도서명’,’저자’,’역자’로 표시할 것)
SELECT *
FROM TB_BOOK
WHERE BOOK_NM = '아타트롤';

SELECT WRITER_NO
FROM TB_BOOK_AUTHOR
JOIN TB_WRITER USING (WRITER_NO)
JOIN TB_BOOK USING (BOOK_NO)
WHERE BOOK_NM = '아타트롤'; --저자 WRITER_NO 286

SELECT *
FROM TB_BOOK_TRANSLATOR
WHERE BOOK_NO = '1991081002'; --WRITER_NO = 647

SELECT BOOK_NM, A.WRITER_NO, C.WRITER_NO
FROM TB_BOOK_TRANSLATOR A
JOIN TB_BOOK B ON (A.BOOK_NO=B.BOOK_NO)
JOIN TB_WRITER C ON (A.WRITER_NO = C.WRITER_NO)
WHERE B.BOOK_NM = '아타트롤';

--답
SELECT --A.WRITER_NO, C.WRITER_NO, 
        B.BOOK_NM 도서명,D.WRITER_NM 저자, E.WRITER_NM 역자
FROM TB_BOOK_AUTHOR A
JOIN TB_BOOK B ON (A.BOOK_NO = B.BOOK_NO)
JOIN TB_BOOK_TRANSLATOR C ON (B.BOOK_NO = C.BOOK_NO)
JOIN TB_WRITER D ON (A.WRITER_NO = D.WRITER_NO)
JOIN TB_WRITER E ON (C.WRITER_NO = E.WRITER_NO)
WHERE B.BOOK_NM = '아타트롤';

--21
--현재 기준으로 최초 발행일로부터 만 30년이 경과되고, 재고 수량이 90권 이상인 도서에 대해 도서명, 재고
--수량, 원래 가격, 20% 인하 가격을 표시하는 SQL 구문을 작성하시오. (결과 헤더는 “도서명”, “재고
--수량”, “가격(Org)”, “가격(New)”로 표시할 것. 재고 수량이 많은 순, 할인 가격이 높은 순, 도서명
--순으로 표시되도록 할 것)
SELECT BOOK_NM 도서명, STOCK_QTY 재고수량, PRICE "가격(Org)", PRICE*0.8 "가격(NEW)"
FROM TB_BOOK
JOIN TB_BOOK_AUTHOR USING (BOOK_NO)
JOIN TB_WRITER USING (WRITER_NO)
WHERE FLOOR(MONTHS_BETWEEN(SYSDATE, REGIST_DATE)/12) >= 30 AND STOCK_QTY >= 90
ORDER BY 2 DESC, 4 DESC, 1;